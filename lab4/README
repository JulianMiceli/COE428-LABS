Lab 4 proved to be rather difficult. My original implementation was going to utilize pointers as it seemed fitting when trying to represent a FSM. However, due to midterms and time not being on my side, this implementation was scrapped and a simpler yet reasonable implementation was chosen. In the current implementation everything works as intended. I was able to initialize my FSM, and print it out to the screen by pressing 'p'. On top of these, invoking a '0' or '1' will cause the state to change in accordance to the FSM I was given. 'c'followed by the 1 or 0 FSM and the change of state will change the state in the 0 or 1 fsm of the current state to the state inputted. Invoking 'g' will round up any states that are unreachable and denote them as garbage. This function works as intended, however, when their is no garbage my program prints "No Garbage" 8 times as thats how many states can be flagged as garbage. Deletion always works as intended, it prompts to the user the states that are marked as garbage and deletes them. However, I have been encountering a weird segmentation error when reinitilaizing the FSM to account for the deleted states and could not figure out a work around. My code follows closely to the how the lab document takes in inputs, however the only difference with mine is that when invoking 'c', you must press enter before entering '0' or '1'. This was done in order for the other cases to function properly and not require you to input their command 3 times.
